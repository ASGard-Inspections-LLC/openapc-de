table(tt.doi$publisher)
?mapvalues
table(my.df$Publisher)
sort(table(my.df$Publisher))
sort(table(my.df$Publisher))
mapvalues(my.df$Publisher, "OMICS Publishing Group", "OMICs Publ. Group")
my.df$Publisher <-  mapvalues(my.df$Publisher,  "OMICs Publ. Group" ,"OMICS Publishing Group"
)
sort(table(my.df$Journal))
levels(my.df$Journal)
levels(unlist(my.df$Journal))
sort(unlist(my.df$Journal))
write.csv(my.df, "tempall.csv")
my.df$Publisher <-  mapvalues(my.df$Publisher,  "OMICs Publ. Group",
"OMICS Publishing Group")
my.df$Journal <- mapvalues(my.df$Journal, c("Frontiers in Psychology", "Frontiers in Plant Science" ),
c("Front. Psychology", "Front. Plant Sci."))
sort(table(my.df$Journal))
sort(table(my.df$Publisher))
write.csv(my.df, "data/apc_de.csv")
my.df$indexed_in_CrossRef <- my.df$doi %in tt.doi$doi
my.df$indexed_in_CrossRef <- my.df$doi %in% tt.doi$doi
head(my.df)
write.csv(my.df, "data/apc_de.csv")
?aggregate
as.data.frame(as.matrix(tapply(my.df$EURO, my.df$Publisher), sum))))
as.data.frame(as.matrix(tapply(my.df$EURO, my.df$Publisher), sum)))
as.data.frame(as.matrix(tapply(my.df$EURO, my.df$Publisher, sum)))
as.data.frame(as.matrix(tapply(my.df$EURO, my.df$uni, sum)))
as.data.frame(as.matrix(tapply(my.df$EURO, my.df$uni, my.df$Publisher,sum)))
as.data.frame(as.matrix(tapply(my.df$EURO, c(my.df$uni, my.df$Publisher)sum)))
as.data.frame(as.matrix(tapply(my.df$EURO, c(my.df$uni, my.df$Publisher),sum)))
as.data.frame(as.matrix(tapply(my.df$EURO, c(my.df$uni, my.df$Publisher),sum))
)
as.data.frame(as.matrix(tapply(my.df$EURO, c(my.df$uni, my.df$Publisher),sum)))
as.data.frame(as.matrix(tapply(my.df$EURO, my.df$uni, my.df$Publisher,sum)))
as.data.frame(as.matrix(tapply(my.df$EURO, my.df$uni, my.df$Publisher,sum))
)
as.data.frame(as.matrix(tapply(my.df$EURO, c(my.df$uni, my.df$Publisher),sum))
)
,)
as.data.frame(as.matrix(tapply(my.df$EURO, my.df$uni,sum))
)
ddply(my.df, my.df$EURO ~ my.df$uni, sum)
ddply(my.df, my.df$uni ~ my.df$EURO, sum)
ddply(my.df, EURO ~ uni, sum)
ddply(my.df, .(EUROuni, summarize)
)
ddply(my.df, .(EURO,uni), summarize)
melt(tapply (my.df$EURO, list (my.df$uni, my.df$Publisher), sum))
library(reshape)
melt(tapply (my.df$EURO, list (my.df$uni, my.df$Publisher), sum))
tt.1 <- melt(tapply (my.df$EURO, list (my.df$uni, my.df$Publisher), sum))
tt.2 <- melt(tapply (my.df$EURO, list (my.df$Publisher, my.df$Journal), sum))
head(tt.1)
head(tt.2)
tt.2 <- melt(tapply (my.df$EURO, list (my.df$Publisher, my.df$Journal), sum))
tt.2[!is.na(tt.2$value),]
tt <- rbind(tt.1, tt.2)
tt <- tt[!is.na(tt$value),]
head(tt)
head(my.df)
tt<- melt(tapply (my.df$EURO, list (my.df$uni, my.df$Publisher), sum))
tt <- tt[!is.na(tt$value),]
head(tt)
tt
apc
apc <- my.df[, c("Publisher", "Journal", "EURO")]
colnames(tt) <- c("value", "target", "source")
colnames(apc) <- c("value", "target", "source")
apc <- rbind(apc, tt)
require(rcharts)
require(rCharts)
sankeyPlot <- rCharts$new()
sankeyPlot$setLib('http://timelyportfolio.github.io/rCharts_d3_sankey')
sankeyPlot$set(
data = apc,
nodeWidth = 15,
nodePadding = 10,
layout = 32,
width = 960,
height = 800,
unit = "EURO",
title= "Author fees paid by Bielefeld University Publication Fund 2012-13"
)
sankeyPlot
head(apc)
sankeyPlot$show(cdn = TRUE)
head(my.df)
head(apc)
head(tt)
head(tt)
tt
require(devtools)
install_github("rebi", "ropensci")
library(rebi)
my.doi <- my.df$doi
my.doi
my.doi <- !(is.na(my.doi))
my.doi
my.df.s <- my.df[!my.df$doi == NA,]
my.doi <- my.df.s$doi
my.doi
head(my.df.s)
my.df.s <- my.df[!(is.na(my.df$doi),]
my.df.s <- my.df[!(is.na(my.df$doi),]
my.df.s <- my.df[!(is.na(my.df$doi)),]
head(my.df.s)
my.doi <- my.df.s$doi
my.doi
my.pmc <- ldply(my.doi, function(x) search_publications(query = paste("doi:", x, sep="")))
head(my.pmc)
trace(search_publications)
my.pmc <- ldply(my.doi, function(x) search_publications(query = paste("doi:", x, sep="")))
head(my.pmc)
dim(my.pmc)
my.pmc <- my.pmc[,c("pmid", "pmcid")]
my.tmp <- merge(my.df, my.pmc, by="doi", all = T)
head(my.df)
my.pmc <- ldply(my.doi, function(x) search_publications(query = paste("doi:", x, sep="")))
warningns()
warnings()
my.pmc <- my.pmc[,c("pmid", "pmcid", "doi")]
my.tmp <- merge(my.df, my.pmc, by="doi", all = T)
head(my.tmp)
unibi <- read.csv("data/unibi12-13.csv", header = T, sep =",")
unireg.12 <- read.csv("data/unireg12.csv", header = T, sep = ",")
unireg.13 <- read.csv("data/unireg13.csv", header = T, sep = ",")
unireg <- rbind(unireg.12, unireg.13)
unibi$base.url <- "http://pub.uni-bielefeld.de/"
unibi$uni <- "Uni Bielefeld"
unireg$base.url <- "http://epub.uni-regensburg.de/"
unireg$uni <- "Uni Regensburg"
colnames(unibi) <- c("repo_id", "EURO", "Period", "Publisher", "Journal", "doi", "issn.1",
"issn.2", "base.url","uni")
colnames(unireg) <- c("repo_id", "EURO", "Period", "Publisher", "Journal", "doi", "issn.1",
"issn.2", "base.url","uni")
my.df <- rbind(unireg, unibi)
# disambiguate journal, publisher names
require(plyr)
require(RCurl)
require(RJSONIO)
source("R/doi_fetch.r")
# exclude empy
my.df <- my.df[!is.na(my.df$doi),]
tt.doi <- ldply(my.df$doi, doi_fetch)
# transform:
my.df <- rbind(unireg, unibi)
#publisher title
my.df <- transform(my.df,
Publisher=ifelse(my.df$doi %in% tt.doi$doi,
as.character(tt.doi$publisher),
as.character(my.df$Publisher)))
# transform journal title
my.df <- transform(my.df,
Journal=ifelse(my.df$doi %in% tt.doi$doi,
as.character(tt.doi$journal),
as.character(my.df$Journal)))
# issn.1
my.df <- transform(my.df,
issn.1=ifelse(my.df$doi %in% tt.doi$doi,
as.character(tt.doi$ISSN.1),
as.character(my.df$issn.1)))
# issn.2
my.df <- transform(my.df,
issn.2=ifelse(my.df$doi %in% tt.doi$doi,
as.character(tt.doi$ISSN.2),
as.character(my.df$issn.2)))
# map values
my.df$Publisher <-  mapvalues(my.df$Publisher,  "OMICs Publ. Group",
"OMICS Publishing Group")
my.df$Journal <- mapvalues(my.df$Journal, c("Frontiers in Psychology", "Frontiers in Plant Science" ),
c("Front. Psychology", "Front. Plant Sci."))
# show for whichr ecords CrossRef metadata were used
my.df$indexed_in_CrossRef <- my.df$doi %in% tt.doi$doi
# export
write.csv(my.df, "data/apc_de.csv")
dim(my.df)
head(my.df)
my.df.s <- my.df[!(is.na(my.df$doi)),]
my.doi <- my.df.s$doi
my.pmc <- ldply(my.doi, function(x) search_publications(query = paste("doi:", x, sep="")))
my.pmc <- my.pmc[,c("pmid", "pmcid", "doi")]
my.tmp <- merge(my.df, my.pmc, by="doi", all = T)
names(my.tmp)
"repo_id", "base.url")]
"issn.1", "issn.2", "doi", "indexed_in_CrossRef","pmid", "pmcid", "repo_id", "base.url")]
my.df <- my.tmp[,c("uni", "Period", "Euro", "Publisher", "Journal", "issn.1", "issn.2", "doi", "indexed_in_CrossRef","pmid", "pmcid", "repo_id", "base.url")]
head(my.tmp)
my.df <- my.tmp[,c("uni", "Period", "Euro", "Publisher", "Journal", "issn.1", "issn.2", "doi", "indexed_in_CrossRef","pmid", "pmcid", "repo_id", "base.url")]
names(my.tmp)
my.df <- my.tmp[,c("uni", "Period", "EURO", "Publisher",
"Journal", "issn.1", "issn.2", "doi",
"indexed_in_CrossRef","pmid", "pmcid",
"repo_id", "base.url")]
write.csv(my.df, "data/apc_de.csv")
head(my.df)
write.csv(my.df, "data/apc_de.csv")
is(my.df)
write.csv(as.data.frame(my.df), "data/apc_de.csv")
write.csv(data.frame(my.df), "data/apc_de.csv")
do.call("rbind", my.df)
do.call("unlist", my.df)
write.csv(data.frame(matrix(my.df)), "data/apc_de.csv")
write.csv(data.frame(as.matrix(my.df)), "data/apc_de.csv")
as.matrix(my.df))
as.matrix(my.df)
my.df <- rbind(unireg, unibi)
#publisher title
my.df <- transform(my.df,
Publisher=ifelse(my.df$doi %in% tt.doi$doi,
as.character(tt.doi$publisher),
as.character(my.df$Publisher)))
# transform journal title
my.df <- transform(my.df,
Journal=ifelse(my.df$doi %in% tt.doi$doi,
as.character(tt.doi$journal),
as.character(my.df$Journal)))
# issn.1
my.df <- transform(my.df,
issn.1=ifelse(my.df$doi %in% tt.doi$doi,
as.character(tt.doi$ISSN.1),
as.character(my.df$issn.1)))
# issn.2
my.df <- transform(my.df,
issn.2=ifelse(my.df$doi %in% tt.doi$doi,
as.character(tt.doi$ISSN.2),
as.character(my.df$issn.2)))
# map values
my.df$Publisher <-  mapvalues(my.df$Publisher,  "OMICs Publ. Group",
"OMICS Publishing Group")
my.df$Journal <- mapvalues(my.df$Journal, c("Frontiers in Psychology", "Frontiers in Plant Science" ),
c("Front. Psychology", "Front. Plant Sci."))
# show for whichr ecords CrossRef metadata were used
my.df$indexed_in_CrossRef <- my.df$doi %in% tt.doi$doi
my.tmp <- merge(my.df, my.pmc, by="doi", all.x = T)
dim(my.df)
dim(my.tmp)
my.tmp
my.df <- my.tmp[,c("uni", "Period", "EURO", "Publisher",
"Journal", "issn.1", "issn.2", "doi",
"indexed_in_CrossRef","pmid", "pmcid",
"repo_id", "base.url")]
write.csv(my.df, "data/apc_de.csv")
tt <- do.call("rbind", lapply(my.df, data.frame, stringsAsFactors = FALSE))
tt
tt <- do.call("rbind", lapply(my.df, data.frame, stringsAsFactors = FALSE))
data.frame(my.df)
data.frame(my.df, stringsAsFactors = F)
write.csv(data.frame(my.df, stringsAsFactors = F), "tt.csv")
my.df <- my.tmp[,c("uni", "Period", "EURO", "Publisher",
"Journal", "issn.1", "issn.2", "doi",
"indexed_in_CrossRef","pmid", "pmcid",
"repo_id", "base.url")]
write.csv(my.df, "data/apc_de.csv", append = TRUE)
str(my.df)
my.df$pmid <- unlist(my.df$pmid)
my.df$pmcid <- unlist(my.df$pmcid)
str(my.df)
my.df <- my.tmp[,c("uni", "Period", "EURO", "Publisher",
"Journal", "issn.1", "issn.2", "doi",
"indexed_in_CrossRef","pmid", "pmcid",
"repo_id", "base.url")]
write.csv(my.df, "data/apc_de.csv", append = TRUE)
unlist(my.df$pmcid)
my.df$pmcid <- unlist(my.df$pmcid)
pmcid
my.df$pmcid
dim(my.df)
unlist(my.df$pmcid)
list(my.df$pmcid)
unlist(my.df$pmcid)
factor(my.df$pmcid)
c(my.df$pmcid)
unlist(my.df$pmcid)
length(unlist(my.df$pmcid))
my.df$pmcid
rbind(my.df$pmcid)
do.call("rbind", my.df$pmcid)
as.data.frame(do.call("rbind", my.df$pmcid))
my.df
is.null(my.df$pmcid)
my.df$pmcid[sapply(my.df$pmcid, is.null)] <- NA
my.df$pmcid <- unlist(my.df$pmcid)
my.df <- my.tmp[,c("uni", "Period", "EURO", "Publisher",
"Journal", "issn.1", "issn.2", "doi",
"indexed_in_CrossRef","pmid", "pmcid",
"repo_id", "base.url")]
write.csv(my.df, "data/apc_de.csv", append = TRUE)
my.df <- my.tmp[,c("uni", "Period", "EURO", "Publisher",
"Journal", "issn.1", "issn.2", "doi",
"indexed_in_CrossRef","pmid", "pmcid",
"repo_id", "base.url")]
write.csv(my.df, "data/apc_de.csv")
my.df
is.null(my.df$pmcid)
is.null(unlist(my.df$pmcid))
my.df$pmicid
my.df$pmcid
my.df[my.df$pmcid == "NULL",]
my.df$pmcid[sapply(my.df$pmcid, "NULL")] <- NA
my.df$pmcid == NULL
my.df$pmcid == "NULL"
my.df[my.df$pmcid == "NULL",]
my.df[my.df$pmcid == "NULL", "pmcid"]
my.df[my.df$pmcid == "NULL", "pmcid"] <- NA
my.df[my.df$pmcid == "NULL", "pmcid"]
my.df <- my.tmp[,c("uni", "Period", "EURO", "Publisher",
"Journal", "issn.1", "issn.2", "doi",
"indexed_in_CrossRef","pmid", "pmcid",
"repo_id", "base.url")]
write.csv(my.df, "data/apc_de.csv")
my.df$pmcid
my.df <- rbind(unireg, unibi)
#publisher title
my.df <- transform(my.df,
Publisher=ifelse(my.df$doi %in% tt.doi$doi,
as.character(tt.doi$publisher),
as.character(my.df$Publisher)))
# transform journal title
my.df <- transform(my.df,
Journal=ifelse(my.df$doi %in% tt.doi$doi,
as.character(tt.doi$journal),
as.character(my.df$Journal)))
# issn.1
my.df <- transform(my.df,
issn.1=ifelse(my.df$doi %in% tt.doi$doi,
as.character(tt.doi$ISSN.1),
as.character(my.df$issn.1)))
# issn.2
my.df <- transform(my.df,
issn.2=ifelse(my.df$doi %in% tt.doi$doi,
as.character(tt.doi$ISSN.2),
as.character(my.df$issn.2)))
# map values
my.df$Publisher <-  mapvalues(my.df$Publisher,  "OMICs Publ. Group",
"OMICS Publishing Group")
my.df$Journal <- mapvalues(my.df$Journal, c("Frontiers in Psychology", "Frontiers in Plant Science" ),
c("Front. Psychology", "Front. Plant Sci."))
# show for whichr ecords CrossRef metadata were used
my.df$indexed_in_CrossRef <- my.df$doi %in% tt.doi$doi
# export
head(my.pmc)
is(my.pmc)
str(MY.PMC)
str(my.pmc)
is.null(my.pmc)
is.null(my.pmc$pmcid)
is.null(unlist(my.pmc$pmcid))
my.pmc$pmcid
my.pmc$pmcid == NULL
my.pmc$pmcid = NULL
my.pmc$pmcid
my.pmc <- ldply(my.doi, function(x) search_publications(query = paste("doi:", x, sep="")))
my.pmc <- ldply(my.doi, function(x) search_publications(query = paste("doi:", x, sep="")))
ok <- compact(my.pmc)
head(ok)
ldply(ok, is.null)
is(ok)
om$pmcid
ok$pmcid
is.null(ok$pmcid)
is.null(unlist(ok$pmcid))
length(as.character(ok$pmcid))
length(unlist(as.character(ok$pmcid))
)
my.pmc.t <- my.pmc
my.pmc$pmcid <- as.character(my.pmc$pmcid)
my.pmc$pmid <- unlist(my.pmc$pmid)
my.pmc <- my.pmc[,c("pmid", "pmcid", "doi")]
my.tmp <- merge(my.df, my.pmc, by="doi", all.x = T)
my.df <- my.tmp[,c("uni", "Period", "EURO", "Publisher",
"Journal", "issn.1", "issn.2", "doi",
"indexed_in_CrossRef","pmid", "pmcid",
"repo_id", "base.url")]
write.csv(my.df, "data/apc_de.csv")
my.df$pmcid
my.pmc[my.pmc$id == "NULL",]
my.pmc[my.pmc$pmcid == "NULL",]
my.pmc$pmcid[my.pmc$pmcid == "NULL",]
my.pmc[my.pmc$pmcid == "NULL", "pmcid"]
my.pmc[my.pmc$pmcid == "NULL", "pmcid"] <- NA
my.pmc
my.tmp <- merge(my.df, my.pmc, by="doi", all.x = T)
# a bit of sorting
my.df <- my.tmp[,c("uni", "Period", "EURO", "Publisher",
"Journal", "issn.1", "issn.2", "doi",
"indexed_in_CrossRef","pmid", "pmcid",
"repo_id", "base.url")]
write.csv(my.df, "data/apc_de.csv")
my.df
names(my.df)
my.tmp <- merge(my.df, my.pmc, by="doi", all.x = T)
head(my.tmp)
my.df <- rbind(unireg, unibi)
#publisher title
my.df <- transform(my.df,
Publisher=ifelse(my.df$doi %in% tt.doi$doi,
as.character(tt.doi$publisher),
as.character(my.df$Publisher)))
# transform journal title
my.df <- transform(my.df,
Journal=ifelse(my.df$doi %in% tt.doi$doi,
as.character(tt.doi$journal),
as.character(my.df$Journal)))
# issn.1
my.df <- transform(my.df,
issn.1=ifelse(my.df$doi %in% tt.doi$doi,
as.character(tt.doi$ISSN.1),
as.character(my.df$issn.1)))
# issn.2
my.df <- transform(my.df,
issn.2=ifelse(my.df$doi %in% tt.doi$doi,
as.character(tt.doi$ISSN.2),
as.character(my.df$issn.2)))
# map values
my.df$Publisher <-  mapvalues(my.df$Publisher,  "OMICs Publ. Group",
"OMICS Publishing Group")
my.df$Journal <- mapvalues(my.df$Journal, c("Frontiers in Psychology", "Frontiers in Plant Science" ),
c("Front. Psychology", "Front. Plant Sci."))
# show for whichr ecords CrossRef metadata were used
my.df$indexed_in_CrossRef <- my.df$doi %in% tt.doi$doi
my.tmp <- merge(my.df, my.pmc, by="doi", all.x = T)
# a bit of sorting
my.df <- my.tmp[,c("uni", "Period", "EURO", "Publisher",
"Journal", "issn.1", "issn.2", "doi",
"indexed_in_CrossRef","pmid", "pmcid",
"repo_id", "base.url")]
write.csv(my.df, "data/apc_de.csv")
my.df$pmcid
?write.csv
write.csv(my.df, "data/apc_de.csv", row.names = FALSE)
require(reshape)
tt<- melt(tapply (my.df$EURO, list (my.df$uni, my.df$Publisher), sum))
tt <- tt[!is.na(tt$value),]
colnames(tt) <- c("source", "target", "value")
# join with apc per article set
apc <- my.df[, c("Publisher", "Journal", "EURO")]
colnames(apc) <- c("source", "target", "value")
apc <- rbind(apc, tt)
require(rCharts)
sankeyPlot <- rCharts$new()
sankeyPlot$setLib('http://timelyportfolio.github.io/rCharts_d3_sankey')
sankeyPlot$set(
data = apc,
nodeWidth = 10,
nodePadding = 10,
layout = 32,
width = 720,
height = 800,
unit = "EURO",
title= "Author fees paid by Bielefeld University Publication Fund 2012-13"
)
sankeyPlot
tt
sankeyPlot$set(
data = tt,
nodeWidth = 10,
nodePadding = 10,
layout = 32,
width = 720,
height = 800,
unit = "EURO",
title= "Author fees paid by Bielefeld University Publication Fund 2012-13"
)
sankeyPlot
tt <- tt[!is.na(tt$value),]
sankeyPlot <- rCharts$new()
sankeyPlot$setLib('http://timelyportfolio.github.io/rCharts_d3_sankey')
sankeyPlot$set(
data = tt,
nodeWidth = 10,
nodePadding = 10,
layout = 32,
width = 720,
height = 800,
unit = "EURO",
title= "Author fees paid by Bielefeld University Publication Fund 2012-13"
)
sankeyPlot
print(sankeyPlot)
sankeyPlot$show()
sankeyPlot$print()
head(my.df)
unireg <- my.df[my.df$uni == "Uni Regensburg",]
unireg <- unireg[,c("Publisher", "Journal", "EURO")]
colnames(unibi.sub) <- c("source", "target", "value")
unibi.sub$value <- as.numeric(unibi.sub$value)
colnames(unireg) <- c("source", "target", "value")
unireg$value <- as.numeric(unireg$value)
#get affiliation
tt <- as.data.frame(as.matrix((tapply(unireg$value,unireg$source, sum))))
tt$target <- rownames(tt)
tt$source <- rep("Uni Regensburg", times = nrow(tt))
colnames(tt) <- c("value", "target", "source")
unireg.sub <- rbind(tt, unibireg)
unireg.sub <- rbind(tt, unireg)
sankeyPlot <- rCharts$new()
sankeyPlot$setLib('http://timelyportfolio.github.io/rCharts_d3_sankey')
sankeyPlot$set(
data = unireg.sub,
nodeWidth = 15,
nodePadding = 10,
layout = 32,
width = 960,
height = 800,
unit = "EURO",
title= "Author fees paid by University of Regensburg Publication Fund 2012-13"
)
sankeyPlot
sankeyPlot$print
sankeyPlot$print()
